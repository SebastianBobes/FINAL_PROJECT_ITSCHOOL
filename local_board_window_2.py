# Form implementation generated from reading ui file '.\local_board_window_2.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import tkinter

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QPixmap
from PyQt6.QtWidgets import QMessageBox, QMainWindow

import euroavia_db


class Ui_LocalBoard2Window(QMainWindow):
    def setupUi(self, LocalBoard2Window):
        LocalBoard2Window.setObjectName("LocalBoard2Window")
        LocalBoard2Window.resize(800, 600)
        LocalBoard2Window.setMinimumSize(QtCore.QSize(800, 600))
        LocalBoard2Window.setMaximumSize(QtCore.QSize(800, 600))
        self.centralwidget = QtWidgets.QWidget(parent=LocalBoard2Window)
        self.centralwidget.setObjectName("centralwidget")
        self.background_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.background_label.setGeometry(QtCore.QRect(0, 0, 811, 621))
        self.background_label.setObjectName("background_label")
        self.head_of_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.head_of_label.setGeometry(QtCore.QRect(10, 20, 241, 61))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setBold(True)
        self.head_of_label.setFont(font)
        self.head_of_label.setObjectName("head_of_label")
        self.green_1 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.green_1.setGeometry(QtCore.QRect(720, 150, 51, 51))
        self.green_1.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 150px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* Darker background on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #3e8e41; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.green_1.setText("")
        self.green_1.setObjectName("green_1")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(470, 160, 16, 16))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_7 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(20, 160, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(70, 230, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(30, 310, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.label_11 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(70, 380, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(400, 380, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.label_6 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(680, 380, 20, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.green_2 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.green_2.setGeometry(QtCore.QRect(10, 220, 51, 51))
        self.green_2.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 150px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* Darker background on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #3e8e41; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.green_2.setText("")
        self.green_2.setObjectName("green_2")
        self.green_4 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.green_4.setGeometry(QtCore.QRect(10, 370, 51, 51))
        self.green_4.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 150px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* Darker background on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #3e8e41; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.green_4.setText("")
        self.green_4.setObjectName("green_4")
        self.green_3 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.green_3.setGeometry(QtCore.QRect(540, 300, 51, 51))
        self.green_3.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 150px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* Darker background on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #3e8e41; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.green_3.setText("")
        self.green_3.setObjectName("green_3")
        self.thinking_man_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.thinking_man_label.setGeometry(QtCore.QRect(510, -10, 381, 261))
        self.thinking_man_label.setText("")
        self.thinking_man_label.setPixmap(QtGui.QPixmap(":/newPrefix/istockphoto-645085176-612x612-removebg-preview.png"))
        self.thinking_man_label.setScaledContents(True)
        self.thinking_man_label.setObjectName("thinking_man_label")
        self.exit_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.exit_button.setGeometry(QtCore.QRect(330, 530, 121, 61))
        self.exit_button.setStyleSheet("QPushButton {\n"
"    background-color: #FF474C; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: white; /* Text color */\n"
"    width: 50px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #FF5F5C; /* Slightly lighter but closer to the original color */\n"
"    transform: scale(1.05); /* Increase size on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #FF474A; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.exit_button.setObjectName("exit_button")
        self.euroavia_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.euroavia_label.setGeometry(QtCore.QRect(280, -50, 241, 241))
        self.euroavia_label.setText("")
        self.euroavia_label.setPixmap(QtGui.QPixmap(":/newPrefix/EUROAVIA_Logo.png"))
        self.euroavia_label.setScaledContents(True)
        self.euroavia_label.setObjectName("euroavia_label")
        self.comboBox_9 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_9.setGeometry(QtCore.QRect(240, 380, 151, 31))
        self.comboBox_9.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_9.setObjectName("comboBox_9")
        self.comboBox_8 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_8.setGeometry(QtCore.QRect(210, 310, 151, 31))
        self.comboBox_8.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_8.setObjectName("comboBox_8")
        self.comboBox_7 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_7.setGeometry(QtCore.QRect(190, 230, 141, 31))
        self.comboBox_7.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_7.setObjectName("comboBox_7")
        self.comboBox_6 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_6.setGeometry(QtCore.QRect(130, 160, 151, 31))
        self.comboBox_6.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_6.setObjectName("comboBox_6")
        members = euroavia_db.read_parameter_from_db('members', 'id', 'last_name')
        for index in members.keys():
            self.comboBox_6.addItem("")
            self.comboBox_7.addItem("")
            self.comboBox_8.addItem("")
            self.comboBox_9.addItem("")
        self.previous_page_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.previous_page_button.setGeometry(QtCore.QRect(20, 530, 131, 61))
        self.previous_page_button.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: white; /* Text color */\n"
"    width: 50px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #FF5F5C; /* Slightly lighter but closer to the original color */\n"
"    transform: scale(1.05); /* Increase size on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #FF474A; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.previous_page_button.setObjectName("previous_page_button")
        self.label_14 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(290, 160, 211, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.comboBox_6_2 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_6_2.setGeometry(QtCore.QRect(510, 160, 101, 31))
        self.comboBox_6_2.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_6_2.setObjectName("comboBox_6_2")
        self.label_15 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(340, 230, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.comboBox_7_1 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_7_1.setGeometry(QtCore.QRect(520, 230, 101, 31))
        self.comboBox_7_1.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_7_1.setObjectName("comboBox_7_1")
        events = euroavia_db.read_parameter_from_db('events', 'event_id', 'name')
        for index in events.keys():
            self.comboBox_6_2.addItem("")
            self.comboBox_7_1.addItem("")
        self.label_16 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(630, 230, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(620, 160, 21, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_17.setFont(font)
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_18.setGeometry(QtCore.QRect(370, 310, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_18.setFont(font)
        self.label_18.setObjectName("label_18")
        self.comboBox_9_2 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_9_2.setGeometry(QtCore.QRect(570, 380, 101, 31))
        self.comboBox_9_2.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_9_2.setObjectName("comboBox_9_2")
        dep = euroavia_db.read_parameter_from_db('departments', 'department_id', 'name')
        for index in dep.keys():
            self.comboBox_9_2.addItem("")
        self.background_label.raise_()
        self.head_of_label.raise_()
        self.label_4.raise_()
        self.label_8.raise_()
        self.label_9.raise_()
        self.label_11.raise_()
        self.label_12.raise_()
        self.label_6.raise_()
        self.green_2.raise_()
        self.green_4.raise_()
        self.green_3.raise_()
        self.thinking_man_label.raise_()
        self.exit_button.raise_()
        self.euroavia_label.raise_()
        self.label_7.raise_()
        self.green_1.raise_()
        self.comboBox_9.raise_()
        self.comboBox_8.raise_()
        self.comboBox_7.raise_()
        self.comboBox_6.raise_()
        self.previous_page_button.raise_()
        self.label_14.raise_()
        self.comboBox_6_2.raise_()
        self.label_15.raise_()
        self.comboBox_7_1.raise_()
        self.label_16.raise_()
        self.label_17.raise_()
        self.label_18.raise_()
        self.comboBox_9_2.raise_()
        LocalBoard2Window.setCentralWidget(self.centralwidget)

        self.retranslateUi(LocalBoard2Window)
        QtCore.QMetaObject.connectSlotsByName(LocalBoard2Window)

    def retranslateUi(self, LocalBoard2Window):
        _translate = QtCore.QCoreApplication.translate
        LocalBoard2Window.setWindowTitle(_translate("LocalBoard2Window", "MainWindow"))
        self.background_label.setText(_translate("LocalBoard2Window", "<html><head/><body><p><img src=\":/newPrefix/EUROAVIA_Logo.png\"/></p></body></html>"))
        self.head_of_label.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#00ff00;\">YOU\'VE LOGGED IN AS:</span></p><p><span style=\" font-size:16pt; color:#ff474c;\">FUNCTION</span></p></body></html>"))
        self.label_4.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:14pt; color:#ffffff;\">?</span></p></body></html>"))
        self.label_7.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">6.Membrul</span></p></body></html>"))
        self.label_8.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">7.Membrul</span></p></body></html>"))
        self.label_9.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">8.Sterge membrul </span></p></body></html>"))
        self.label_11.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">9.Muta membrul</span></p></body></html>"))
        self.label_12.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">la departamentul </span></p></body></html>"))
        self.label_6.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">.</span></p></body></html>"))
        self.exit_button.setText(_translate("LocalBoard2Window", "EXIT"))
        self.previous_page_button.setText(_translate("LocalBoard2Window", "PREVIOUS PAGE"))
        self.label_14.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">nu va mai participa la:</span></p></body></html>"))
        self.label_15.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">va mai participa la:</span></p></body></html>"))
        self.label_16.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">.</span></p></body></html>"))
        self.label_17.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">.</span></p></body></html>"))
        self.label_18.setText(_translate("LocalBoard2Window", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">din baza de date.</span></p></body></html>"))
        qpixmap = QPixmap("images/EUROAVIA_Logo.png")
        self.background_label.setPixmap(qpixmap)
        qpixmap = QPixmap("images/EUROAVIA_Logo.png")
        self.euroavia_label.setPixmap(qpixmap)
        qpixmap = QPixmap("images/istockphoto-645085176-612x612-removebg-preview.png")
        self.thinking_man_label.setPixmap(qpixmap)
        self.exit_button.clicked.connect(exit)

        events = euroavia_db.read_parameter_from_db('events', 'event_id', 'name')
        for index in events.keys():
            self.comboBox_6_2.setItemText(index - 1, _translate("HeadsWindow", f"{index}.{events[index]}"))
            self.comboBox_7_1.setItemText(index - 1, _translate("HeadsWindow", f"{index}.{events[index]}"))

        members = euroavia_db.read_parameter_from_db('members', 'id', 'last_name', 'first_name')
        x = list(members.keys())
        x.sort(reverse=False)
        for index, value in enumerate(x):
            first_name = members[value][0]
            last_name = members[value][1]
            self.comboBox_6.setItemText(index, _translate("LocalBoard1Window", f"{value}. {first_name} {last_name}"))
            self.comboBox_7.setItemText(index, _translate("LocalBoard1Window", f"{value}. {first_name} {last_name}"))
            self.comboBox_8.setItemText(index, _translate("LocalBoard1Window", f"{value}. {first_name} {last_name}"))
            self.comboBox_9.setItemText(index, _translate("LocalBoard1Window", f"{value}. {first_name} {last_name}"))

        dep = euroavia_db.read_parameter_from_db('departments', 'department_id', 'name')
        for index in dep.keys():
            self.comboBox_9_2.setItemText(index - 1, _translate("HeadsWindow", f"{index}. {dep[index]}"))

        self.green_1.clicked.connect(self.delete_event_for_member)
        self.green_2.clicked.connect(self.add_event_for_member)
        self.green_3.clicked.connect(self.delete_member)
        self.green_4.clicked.connect(self.replace_member_to_another_dep)

    def get_id(self, text: str):
        member_id = ''
        for item in text:
            if item != '.':
                member_id = member_id + item
            else:
                break
        return member_id

    def delete_event_for_member(self):
        member_id = self.get_id(self.comboBox_6.currentText())
        event_id = self.get_id(self.comboBox_6_2.currentText())
        message = euroavia_db.delete_event_for_member(int(member_id), int(event_id))
        if message == False:
            QMessageBox.critical(self, "ERROR", "Membrul nu participa la acest eveniment!")
        else:
            QMessageBox.information(self, "Info", f"Stergerea a fost realizata cu succes!")

    def add_event_for_member(self):
        member_id = int(self.get_id(self.comboBox_7.currentText()))
        event_id = int(self.get_id(self.comboBox_7_1.currentText()))
        message = euroavia_db.add_event_for_member(member_id, event_id)
        if message == False:
            QMessageBox.critical(self, "ERROR", "Membrul participa deja la acest eveniment!")
        else:
            QMessageBox.information(self, "Info", f"Eveniment  adaugat!")

    def delete_member(self):
        member_id = int(self.get_id(self.comboBox_8.currentText()))
        x = tkinter.messagebox.askokcancel(title='WARNING', message='Esti sigur ca vrei sa stergi membrul?')
        if x:
            euroavia_db.delete_member(member_id)
            QMessageBox.information(self, "Info", f"Membrul a fost sters!")
        else:
            return False

    def replace_member_to_another_dep(self):
        member_id = int(self.get_id(self.comboBox_9.currentText()))
        x = tkinter.messagebox.askokcancel(title='WARNING',
                                           message='Esti sigur ca vrei sa muti membrul la alt departament?')
        if x:
            dep_id = int(self.get_id(self.comboBox_9_2.currentText()))
            message = euroavia_db.replace_member_to_another_dep(member_id, dep_id)
            if message == False:
                QMessageBox.critical(self, "ERROR", "Membrul este deja la acest departament!")
            else:
                QMessageBox.information(self, "Info", f"Departament schimbat!")
        else:
            return False


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    LocalBoard2Window = QtWidgets.QMainWindow()
    ui = Ui_LocalBoard2Window()
    ui.setupUi(LocalBoard2Window)
    LocalBoard2Window.show()
    sys.exit(app.exec())
