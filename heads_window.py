# Form implementation generated from reading ui file '.\heads_window.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
from tkinter import messagebox

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QPixmap
from PyQt6.QtWidgets import QMainWindow, QMessageBox
import euroavia_db
import authentication
import excel_writer


class Ui_HeadsWindow(QMainWindow):

    def setupUi(self, HeadsWindow):
        HeadsWindow.setObjectName("HeadsWindow")
        HeadsWindow.resize(800, 600)
        HeadsWindow.setMinimumSize(QtCore.QSize(800, 600))
        HeadsWindow.setMaximumSize(QtCore.QSize(800, 600))
        self.centralwidget = QtWidgets.QWidget(parent=HeadsWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.background_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.background_label.setGeometry(QtCore.QRect(0, 0, 811, 621))
        self.background_label.setObjectName("background_label")
        self.head_of_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.head_of_label.setGeometry(QtCore.QRect(10, 20, 241, 61))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setBold(True)
        self.head_of_label.setFont(font)
        self.head_of_label.setObjectName("head_of_label")
        self.green_1 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.green_1.setGeometry(QtCore.QRect(470, 150, 51, 51))
        self.green_1.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 150px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* Darker background on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #3e8e41; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.green_1.setText("")
        self.green_1.setObjectName("green_1")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(470, 160, 16, 16))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.red_1 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.red_1.setGeometry(QtCore.QRect(540, 150, 51, 51))
        self.red_1.setStyleSheet("QPushButton {\n"
"    background-color: #FF474C; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 50px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #FF5F5C; /* Slightly lighter but closer to the original color */\n"
"    transform: scale(1.05); /* Increase size on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #FF474A; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.red_1.setText("")
        self.red_1.setObjectName("red_1")
        self.label_7 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(20, 160, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(140, 240, 491, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(20, 310, 491, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.label_5 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(690, 240, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_10 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(580, 310, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(140, 380, 261, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(480, 380, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(70, 460, 251, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.comboBox_5 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_5.setGeometry(QtCore.QRect(330, 460, 181, 31))
        self.comboBox_5.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_5.setObjectName("comboBox_5")
        faculties = euroavia_db.read_parameter_from_db('faculties', 'id', 'name')
        for index in faculties.keys():
                self.comboBox_5.addItem("")
        self.label_6 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(530, 460, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.green_2 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.green_2.setGeometry(QtCore.QRect(20, 220, 51, 51))
        self.green_2.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 150px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* Darker background on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #3e8e41; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.green_2.setText("")
        self.green_2.setObjectName("green_2")
        self.red_2 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.red_2.setGeometry(QtCore.QRect(80, 220, 51, 51))
        self.red_2.setStyleSheet("QPushButton {\n"
"    background-color: #FF474C; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 50px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #FF5F5C; /* Slightly lighter but closer to the original color */\n"
"    transform: scale(1.05); /* Increase size on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #FF474A; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.red_2.setText("")
        self.red_2.setObjectName("red_2")
        self.green_4 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.green_4.setGeometry(QtCore.QRect(10, 370, 51, 51))
        self.green_4.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 150px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* Darker background on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #3e8e41; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.green_4.setText("")
        self.green_4.setObjectName("green_4")
        self.red_4 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.red_4.setGeometry(QtCore.QRect(80, 370, 51, 51))
        self.red_4.setStyleSheet("QPushButton {\n"
"    background-color: #FF474C; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 50px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #FF5F5C; /* Slightly lighter but closer to the original color */\n"
"    transform: scale(1.05); /* Increase size on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #FF474A; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.red_4.setText("")
        self.red_4.setObjectName("red_4")
        self.green_5 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.green_5.setGeometry(QtCore.QRect(570, 450, 51, 51))
        self.green_5.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 150px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* Darker background on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #3e8e41; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.green_5.setText("")
        self.green_5.setObjectName("green_5")
        self.red_5 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.red_5.setGeometry(QtCore.QRect(630, 450, 51, 51))
        self.red_5.setStyleSheet("QPushButton {\n"
"    background-color: #FF474C; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 50px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #FF5F5C; /* Slightly lighter but closer to the original color */\n"
"    transform: scale(1.05); /* Increase size on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #FF474A; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.red_5.setText("")
        self.red_5.setObjectName("red_5")
        self.green_3 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.green_3.setGeometry(QtCore.QRect(640, 300, 51, 51))
        self.green_3.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: black; /* Text color */\n"
"    width: 150px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* Darker background on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #3e8e41; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.green_3.setText("")
        self.green_3.setObjectName("green_3")
        self.thinking_man_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.thinking_man_label.setGeometry(QtCore.QRect(510, -10, 381, 261))
        self.thinking_man_label.setText("")
        self.thinking_man_label.setPixmap(QtGui.QPixmap(":/newPrefix/istockphoto-645085176-612x612-removebg-preview.png"))
        self.thinking_man_label.setScaledContents(True)
        self.thinking_man_label.setObjectName("thinking_man_label")
        self.exit_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.exit_button.setGeometry(QtCore.QRect(670, 530, 121, 61))
        self.exit_button.setStyleSheet("QPushButton {\n"
"    background-color: #FF474C; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: white; /* Text color */\n"
"    width: 50px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #FF5F5C; /* Slightly lighter but closer to the original color */\n"
"    transform: scale(1.05); /* Increase size on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #FF474A; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.exit_button.setObjectName("exit_button")
        self.euroavia_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.euroavia_label.setGeometry(QtCore.QRect(280, -50, 241, 241))
        self.euroavia_label.setText("")
        self.euroavia_label.setPixmap(QtGui.QPixmap(":/newPrefix/EUROAVIA_Logo.png"))
        self.euroavia_label.setScaledContents(True)
        self.euroavia_label.setObjectName("euroavia_label")
        self.comboBox_4 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_4.setGeometry(QtCore.QRect(370, 380, 101, 31))
        self.comboBox_4.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_4.setObjectName("comboBox_4")
        study_years = euroavia_db.read_sduty_years_from_config()
        for item in study_years:
                self.comboBox_4.addItem("")


        self.comboBox_3 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_3.setGeometry(QtCore.QRect(460, 310, 101, 31))
        self.comboBox_3.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_3.setObjectName("comboBox_3")
        members = euroavia_db.read_parameter_from_db('members', 'id', 'last_name')
        for index in members.keys():
                self.comboBox_3.addItem("")

        self.comboBox_2 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(570, 240, 101, 31))
        self.comboBox_2.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_2.setObjectName("comboBox_2")
        dep = euroavia_db.read_parameter_from_db('departments', 'department_id', 'name')
        for item in dep.keys():
                self.comboBox_2.addItem("")
        self.comboBox_1 = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_1.setGeometry(QtCore.QRect(320, 160, 101, 31))
        self.comboBox_1.setStyleSheet("QComboBox {\n"
"    border: 2px solid gray; /* Schimbă gray cu culoarea dorită */\n"
"    border-radius: 10px; /* Schimbă 10px cu raza dorită */\n"
"    padding: 5px; /* Schimbă 5px cu spațierea dorită */\n"
"    background: white; /* Schimbă white cu culoarea de fundal dorită */\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 15px; /* Schimbă 15px cu lățimea dorită pentru săgeata dropdown */\n"
"    border: none; /* Elimină bordura din jurul săgeții dropdown */\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(down_arrow.png); /* Asigură-te că ai o imagine pentru săgeata dropdown */\n"
"    width: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"    height: 10px; /* Schimbă 10px cu dimensiunea dorită */\n"
"}")
        self.comboBox_1.setObjectName("comboBox_1")
        events = euroavia_db.read_parameter_from_db('events','event_id', 'name')
        for index in events.keys():
                self.comboBox_1.addItem("")
        self.change_password_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.change_password_button.setGeometry(QtCore.QRect(20, 530, 131, 61))
        self.change_password_button.setStyleSheet("QPushButton {\n"
"    background-color: #4DBB63; /* Background color */\n"
"    border: none; /* Remove default border */\n"
"    color: white; /* Text color */\n"
"    width: 50px; /* Width of the button */\n"
"    height: 50px; /* Height of the button */\n"
"    border-radius: 25px; /* Rounded corners, half of width/height */\n"
"    text-align: center; /* Center text */\n"
"    font-size: 12px; /* Font size */\n"
"    font-weight: bold; /* Bold text */\n"
"    transition: all 0.2s ease; /* Smooth transition for all properties */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #FF5F5C; /* Slightly lighter but closer to the original color */\n"
"    transform: scale(1.05); /* Increase size on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #FF474A; /* Even darker background on press */\n"
"    transform: scale(0.95); /* Slightly shrink button to give visual feedback */\n"
"}")
        self.change_password_button.setObjectName("change_password_button")
        self.background_label.raise_()
        self.head_of_label.raise_()
        self.label_4.raise_()
        self.label_8.raise_()
        self.label_9.raise_()
        self.label_5.raise_()
        self.label_10.raise_()
        self.label_11.raise_()
        self.label_12.raise_()
        self.label_13.raise_()
        self.comboBox_5.raise_()
        self.label_6.raise_()
        self.green_2.raise_()
        self.red_2.raise_()
        self.green_4.raise_()
        self.red_4.raise_()
        self.green_5.raise_()
        self.red_5.raise_()
        self.green_3.raise_()
        self.thinking_man_label.raise_()
        self.exit_button.raise_()
        self.euroavia_label.raise_()
        self.label_7.raise_()
        self.green_1.raise_()
        self.comboBox_4.raise_()
        self.comboBox_3.raise_()
        self.comboBox_2.raise_()
        self.comboBox_1.raise_()
        self.change_password_button.raise_()
        self.red_1.raise_()
        HeadsWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(HeadsWindow)
        QtCore.QMetaObject.connectSlotsByName(HeadsWindow)
    def set_user(self, user,HeadsWindow):
            self.user= user
            _translate = QtCore.QCoreApplication.translate
            HeadsWindow.setWindowTitle(_translate("HeadsWindow", "MainWindow"))




    def retranslateUi(self, HeadsWindow):
        _translate = QtCore.QCoreApplication.translate
        HeadsWindow.setWindowTitle(_translate("HeadsWindow", "MainWindow"))
        self.background_label.setText(_translate("HeadsWindow", "<html><head/><body><p><img src=\":/newPrefix/EUROAVIA_Logo.png\"/></p></body></html>"))
        self.head_of_label.setText(_translate("HeadsWindow",
                                              f"<html><head/><body><p><span style=\" font-size:16pt; color:#00ff00;\">YOU\'VE LOGGED IN AS:</span></p><p><span style=\" font-size:16pt; color:#ff474c;\">MEMBER OF HEADS </span></p></body></html>"))
        self.label_4.setText(_translate("HeadsWindow", "<html><head/><body><p><span style=\" font-size:14pt; color:#ffffff;\">?</span></p></body></html>"))
        self.label_7.setText(_translate("HeadsWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">1.Cati membrii vor participa la</span></p></body></html>"))
        self.label_8.setText(_translate("HeadsWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">2.Cati membrii s-au inscris in departamentul</span></p></body></html>"))
        self.label_9.setText(_translate("HeadsWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">3.Evenimentele la care va participa membrul</span></p></body></html>"))
        self.label_5.setText(_translate("HeadsWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">? </span></p></body></html>"))
        self.label_10.setText(_translate("HeadsWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">sunt:</span></p></body></html>"))
        self.label_11.setText(_translate("HeadsWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">4.Cati membrii din anul </span></p></body></html>"))
        self.label_12.setText(_translate("HeadsWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">s-au inscris?</span></p></body></html>"))
        self.label_13.setText(_translate("HeadsWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">5.Cati membrii sunt de la</span></p></body></html>"))
        self.label_6.setText(_translate("HeadsWindow", "<html><head/><body><p><span style=\" font-size:16pt; color:#ffffff;\">?</span></p></body></html>"))
        self.exit_button.setText(_translate("HeadsWindow", "EXIT"))
        self.change_password_button.setText(_translate("HeadsWindow", "CHANGE PASSWORD"))
        events = euroavia_db.read_parameter_from_db('events', 'event_id', 'name')
        for index in events.keys():
                self.comboBox_1.setItemText(index-1, _translate("HeadsWindow", events[index]))

        dep = euroavia_db.read_parameter_from_db('departments', 'department_id', 'name')
        for index in dep.keys():
                self.comboBox_2.setItemText(index-1, _translate("HeadsWindow", dep[index]))
        faculties = euroavia_db.read_parameter_from_db('faculties', 'id', 'name')
        for index in faculties.keys():
                self.comboBox_5.setItemText(index - 1, _translate("HeadsWindow", faculties[index]))
        study_years = euroavia_db.read_sduty_years_from_config()
        for index in study_years:
                self.comboBox_4.setItemText(int(index) - 1, _translate("HeadsWindow", study_years[index]))


        members = euroavia_db.read_parameter_from_db('members', 'id', 'last_name')
        x = list(members.keys())
        for index, value in enumerate(x):
                self.comboBox_3.setItemText(index, _translate("HeadsWindow", f"{value}.{members[value]}"))
        qpixmap = QPixmap("images/EUROAVIA_Logo.png")
        self.background_label.setPixmap(qpixmap)
        qpixmap = QPixmap("images/EUROAVIA_Logo.png")
        self.euroavia_label.setPixmap(qpixmap)
        qpixmap = QPixmap("images/istockphoto-645085176-612x612-removebg-preview.png")
        self.thinking_man_label.setPixmap(qpixmap)
        self.exit_button.clicked.connect(exit)
        self.green_1.clicked.connect(self.see_members_for_an_event)
        self.red_1.clicked.connect(self.see_members_for_an_event_excel)
        self.green_2.clicked.connect(self.see_members_from_a_dep)
        self.red_2.clicked.connect(self.see_members_from_a_dep_excel)
        self.green_3.clicked.connect(self.see_event_for_members)
        self.green_4.clicked.connect(self.see_how_many_from_a_study_year)
        self.red_4.clicked.connect(self.see_how_many_from_a_study_year_excel)
    def see_members_for_an_event(self):
        event= self.comboBox_1.currentText()
        members = euroavia_db.see_how_many_at_a_event(event)
        QMessageBox.information(self, "Info", f"{members} membrii !")
    def see_members_for_an_event_excel(self):
        event = self.comboBox_1.currentText()
        data = euroavia_db.see_how_many_at_a_event(event, excel=True)
        excel_writer.create_excel('nr_participanti',data,'event','number_of_members')
        QMessageBox.information(self, "Info", f"Excelul a fost creat!")

    def see_members_from_a_dep(self):
        dep = self.comboBox_2.currentText()
        members = euroavia_db.see_how_many_at_a_department(dep)
        QMessageBox.information(self, "Info", f"{members} membrii !")
    def see_members_from_a_dep_excel(self):
        dep = self.comboBox_2.currentText()
        data = euroavia_db.see_how_many_at_a_department(dep, excel=True)
        excel_writer.create_excel('membrii_dep', data, 'departament', 'number_of_members')
        QMessageBox.information(self, "Info", f"Excelul a fost creat!")

    def see_event_for_members(self):
        str=''
        for index in self.comboBox_3.currentText():
                if index!='.':
                        str = str +index
                else:
                        break
        list = euroavia_db.see_events_for_member(str)
        if len(list) ==0:
                QMessageBox.information(self, "Info", f"Membrul nu participa la niciun eveniment!")
                return False
        str= ''
        for index in list:
                str = str+'\n'+index
        QMessageBox.information(self, "Info", f"Membrul participa la: {str}")

    def see_how_many_from_a_study_year(self):
        study_year = self.comboBox_4.currentText()
        x = euroavia_db.see_how_many_from_a_study_year(study_year)
        QMessageBox.information(self, "Info", f"{x}")
    def see_how_many_from_a_study_year_excel(self):
        study_year = self.comboBox_4.currentText()
        data = euroavia_db.see_how_many_from_a_study_year(study_year, excel=True)
        excel_writer.create_excel('members.study.year', data, 'AN', 'members')
        QMessageBox.information(self, "Info", f"Excelul s-a creat!")

















if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    HeadsWindow = QtWidgets.QMainWindow()
    ui = Ui_HeadsWindow()
    ui.setupUi(HeadsWindow)
    HeadsWindow.show()
    sys.exit(app.exec())
